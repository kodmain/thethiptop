name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'

permissions:
  pull-requests: read
  contents: read

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
            ~/go.sum
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Run all the tests and code checks
        run: make test units

      - name: Upload project to Artifacts
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: project
          path: .

  sonarcloud:
    name: SonarCloud
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download project from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: project
          path: .

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=kodmain_thetiptop
            -Dsonar.organization=kodmain
            -Dsonar.go.coverage.reportPaths=coverage.out
  
  build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Build
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download project from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: project
          path: .

      - name: Get next version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          skipInvalidTags: false

      - name: Build the release
        env:
          VERSION: ${{ steps.semver.outputs.next }}
        run: make build binaries
        
      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          name: TheTipTop Release
          makeLatest: true
          tag: ${{ steps.semver.outputs.next }}
          artifacts: ".build/bin/*"
          allowUpdates: true
          replacesArtifacts: true
          removeArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
